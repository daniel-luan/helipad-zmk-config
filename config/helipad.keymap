/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include "key-labels.h"

#define BAS 0
#define NAV 1
#define MOU 2
#define BUT 3
#define MED 4
#define NUM 5
#define SYM 6
#define FUN 7


// #define RS_ET &mt RSHFT RET
// #define SP_LW &lt LOWER SPACE
// #define SP_RS &lt RAISE SPACE

#define Z_BUT   &lt BUT Z
#define SLS_BUT &lt BUT SLASH

#define ESC_MED &lt MED ESC
#define SPA_NAV &lt NAV SPACE
#define TAB_MOU &lt MOU TAB
#define RET_SYM &lt SYM RET
#define BSC_NUM &lt NUM BSPC
#define DEL_FUN &lt FUN DEL

#define _COPY  &kp LG(C)
#define _PASTE &kp LG(V)
#define _CUT   &kp LG(X)
#define _UNDO  &kp LG(Z)
#define _REDO  &kp LG(LS(Z))

#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 LB6 LH3 LH4 LH5 LH6   // Left-hand keys.
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 RB6 RH3 RH4 RH5 RH6   // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                                                               // Thumb keys.

#define HRM_A &hml LEFT_GUI A
#define HRM_S &hml LEFT_ALT S
#define HRM_D &hml LEFT_CONTROL D
#define HRM_F &hml LEFT_SHIFT F

#define HRM_J &hmr RIGHT_SHIFT J
#define HRM_K &hmr RIGHT_CONTROL K
#define HRM_L &hmr RIGHT_ALT L
#define HRM_SQT &hmr RIGHT_GUI SQT

&lt {
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
       keymap {
              compatible = "zmk,keymap";

              base_layer {
                display-name = "Base";
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  NONE  |  NONE  |  NONE  |  NONE  |  NONE  |  NONE  |                                      |  NONE  |  NONE  |  NONE  |  NONE  |  NONE  |  NONE  |
 // |  NONE  |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  NONE  |
 // |  NONE  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |  NONE  |
 // |  NONE  |   Z    |   X    |   C    |   V    |   B    |  NONE  |                    |  NONE  |   N    |   M    |   ,    |   .    |   /    |  NONE  |
 // |  NONE  |  NONE  |  NONE  |  NONE  |  ESC   | SPACE  |  TAB   |                    | RETURN | BSPC   |  DEL   |  NONE  |  NONE  |  NONE  |  NONE  |
                     bindings = <
       &none  &none  &none  &none  &none    &none                                &none    &none    &none      &none       &none     &none
       &none  &kp Q  &kp W  &kp E  &kp R    &kp T                                &kp Y    &kp U    &kp I      &kp O       &kp P     &none
       &none  HRM_A  HRM_S  HRM_D  HRM_F    &kp G                                &kp H    HRM_J    HRM_K      HRM_L       HRM_SQT   &none
       &none  Z_BUT  &kp X  &kp C  &kp V    &kp B    &none              &none    &kp N    &kp M    &kp COMMA  &kp PERIOD  SLS_BUT   &none
       &none  &none  &none  &none  ESC_MED  SPA_NAV  TAB_MOU            RET_SYM  BSC_NUM  DEL_FUN  &none      &none       &none     &none
                     >;
              };
              nav_layer {
                display-name = "Nav";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |       |       |      |                      |      |       |       |       |       |      |
 // |      | BOOT |      |       |       |      |                      | INS  | HOME  |  UP   |  END  | PG_UP |      |
 // |      | LGUI | LALT | LCTRL | LSHFT |      |                      | CAPS | LEFT  | DOWN  | RIGHT | PG_DN |      |
 // |      |      | RALT |       |       |      |      |        |      | REDO | PASTE | COPY  |  CUT  | UNDO  |      |
 // |      |      |      |       |       |      |      |        |  RET | BSPC | DEL   |       |       |       |      |
                     bindings = <
     &none   &none        &none     &none      &none      &none                            &none       &none     &none      &none      &none      &none
     &none   &bootloader  &none     &none      &none      &none                            &kp INS     &kp HOME  &kp UP     &kp END    &kp PG_UP  &none
     &none   &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none                            &caps_word  &kp LEFT  &kp DOWN   &kp RIGHT  &kp PG_DN  &none
     &none   &none        &kp RALT  &none      &none      &none   &none           &none    _REDO      _PASTE     _COPY      _CUT       _UNDO      &none
     &none   &none        &none     &none      &none      &none   &none           &kp RET  &kp BSPC    &kp DEL   &none      &none      &none      &none
                     >;
              };
              mouse_layer {
                display-name = "Mouse";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
                     bindings = <
     &none   &none        &none     &none      &none      &none                              &none           &none           &none           &none            &none            &none
     &none   &bootloader  &none     &none      &none      &none                              &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none            &none
     &none   &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none                              &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none            &none
     &none   &none        &kp RALT  &none      &none      &none   &none           &none      &none           &mkp MB4        &none           &mkp MB5         &none            &none
     &none   &none        &none     &none      &none      &none   &none           &mkp RCLK  &mkp LCLK       &mkp MCLK       &none           &none            &none            &none
                     >;
              };
              button_layer {
                display-name = "Button";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
                     bindings = <
     &none   &none        &none     &none      &none      &none                                 &none      &none           &none           &none         &none            &none
     &none   _UNDO        _CUT      _COPY      _PASTE     _REDO                                 _REDO      _PASTE          _COPY           _CUT          _UNDO            &none
     &none   &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none                                 &none      &kp RSHFT       &kp RCTRL       &kp RALT      &kp RGUI         &none
     &none   _UNDO        _CUT      _COPY      _PASTE     _REDO      &none           &none      _REDO      _PASTE          _COPY           _CUT          _UNDO            &none
     &none   &none        &none     &none      &mkp MCLK  &mkp LCLK  &mkp RCLK       &mkp RCLK  &mkp LCLK  &mkp MCLK       &none           &none         &none            &none
                     >;
              };
              media_layer {
                display-name = "Media";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
                     bindings = <
     &none   &none        &none     &none      &none      &none                               &none              &none         &none         &none         &none         &none
     &none   &bootloader  &none     &none      &none      &none                               &none              &bt BT_PRV    &bt BT_CLR    &none         &bt BT_NXT    &none
     &none   &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none                               &ext_power EP_TOG  &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &none
     &none   &none        &kp RALT  &none      &none      &none   &none           &none       &out OUT_TOG       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
     &none   &none        &none     &none      &none      &none   &none           &kp C_STOP  &kp C_PP           &kp C_MUTE    &none         &none         &none         &none
                     >;
              };
              num_layer {
                display-name = "Num";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
                     bindings = <
     &none   &none     &none   &none   &none    &none                              &none   &none      &none      &none     &none     &none
     &none   &kp LBKT  &kp N7  &kp N8  &kp N9   &kp RBKT                           &none   &none      &none      &none     &none     &none
     &none   &kp SEMI  &kp N4  &kp N5  &kp N6   &kp EQUAL                          &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
     &none   &kp GRAVE &kp N1  &kp N2  &kp N3   &kp BSLH   &none           &none   &none   &none      &none      &kp LALT  &none     &none
     &none   &none     &none   &none   &kp DOT  &kp N0     &kp MINUS       &none   &none   &none      &none      &none     &none     &none
                     >;
              };
              sym_layer {
                display-name = "Sym";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
                     bindings = <
     &none   &none      &none     &none      &none      &none                                &none   &none      &none      &none     &none        &none
     &none   &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC                             &none   &none      &none      &none     &bootloader  &none
     &none   &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                             &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI     &none
     &none   &kp TILDE  &kp EXCL  &kp AT     &kp POUND  &kp PIPE  &none              &none   &none   &none      &none      &kp LALT  &none        &none
     &none   &none      &none     &none      &kp LPAR   &kp RPAR  &kp UNDER          &none   &none   &none      &none      &none     &none        &none
                     >;
              };
              fun_layer {
                display-name = "Fun";
 // ---------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |                      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |        |      |      |      |      |      |      |      |
                     bindings = <
     &none   &none    &none   &none   &none   &none                               &none   &none           &none      &none     &none        &none
     &none   &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN                           &none   &studio_unlock  &none      &none     &bootloader  &none
     &none   &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK                            &none   &kp RSHFT       &kp RCTRL  &kp RALT  &kp RGUI     &none
     &none   &kp F10  &kp F1  &kp F2  &kp F3  &none      &none            &none   &none   &none           &none      &kp LALT  &none        &none
     &none   &none    &none   &none   &none   &kp SPACE  &kp TAB          &none   &none   &none           &none      &none     &none        &none
                     >;
              };
       };
    combos {
        compatible = "zmk,combos";
        combo_esc_med {
            timeout-ms = <50>;
            key-positions = <LH0 LH1>;
            bindings = <ESC_MED>;
            layers = <BAS>;
        };
        combo_del_fun {
            timeout-ms = <50>;
            key-positions = <RH0 RH1>;
            bindings = <DEL_FUN>;
            layers = <BAS>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <RH0 RH1>;
            bindings = <&kp DEL>;
            layers = <NAV>;
        };
        combo_left_mclk {
            timeout-ms = <50>;
            key-positions = <LH0 LH1>;
            bindings = <&mkp MCLK>;
            layers = <BUT>;
        };
        combo_right_mclk {
            timeout-ms = <50>;
            key-positions = <RH0 RH1>;
            bindings = <&mkp MCLK>;
            layers = <MOU BUT>;
        };
        combo_mute {
            timeout-ms = <50>;
            key-positions = <RH0 RH1>;
            bindings = <&kp C_MUTE>;
            layers = <MED>;
        };
        combo_dot {
            timeout-ms = <50>;
            key-positions = <LH0 LH1>;
            bindings = <&kp DOT>;
            layers = <NUM>;
        };
        combo_lpar {
            timeout-ms = <50>;
            key-positions = <LH0 LH1>;
            bindings = <&kp LPAR>;
            layers = <SYM>;
        };

    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 10 GPIO_ACTIVE_HIGH>;
};